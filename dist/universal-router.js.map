{"version":3,"file":"universal-router.js","sources":["../node_modules/path-to-regexp/index.js","src/matchPath.js","src/matchRoute.js","src/resolveRoute.js","src/UniversalRouter.js"],"sourcesContent":["/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * Default configs.\n */\nvar DEFAULT_DELIMITER = '/'\nvar DEFAULT_DELIMITERS = './'\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\"]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined]\n  '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER\n  var delimiters = (options && options.delimiters) || DEFAULT_DELIMITERS\n  var pathEscaped = false\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      pathEscaped = true\n      continue\n    }\n\n    var prev = ''\n    var next = str[index]\n    var name = res[2]\n    var capture = res[3]\n    var group = res[4]\n    var modifier = res[5]\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1\n\n      if (delimiters.indexOf(path[k]) > -1) {\n        prev = path[k]\n        path = path.slice(0, k)\n      }\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n      pathEscaped = false\n    }\n\n    var partial = prev !== '' && next !== undefined && next !== prev\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = prev || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      pattern: pattern ? escapeGroup(pattern) : '[^' + escapeString(delimiter) + ']+?'\n    })\n  }\n\n  // Push any remaining characters.\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index))\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')\n    }\n  }\n\n  return function (data, options) {\n    var path = ''\n    var encode = (options && options.encode) || encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n        continue\n      }\n\n      var value = data ? data[token.name] : undefined\n      var segment\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue\n\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j], token)\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value), token)\n\n        if (!matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"')\n        }\n\n        path += token.prefix + segment\n        continue\n      }\n\n      if (token.optional) {\n        // Prepend partial segment prefixes.\n        if (token.partial) path += token.prefix\n\n        continue\n      }\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'))\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        pattern: null\n      })\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var delimiter = escapeString(options.delimiter || DEFAULT_DELIMITER)\n  var delimiters = options.delimiters || DEFAULT_DELIMITERS\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|')\n  var route = ''\n  var isEndDelimited = false\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n      isEndDelimited = i === tokens.length - 1 && delimiters.indexOf(token[token.length - 1]) > -1\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = token.repeat\n        ? '(?:' + token.pattern + ')(?:' + prefix + '(?:' + token.pattern + '))*'\n        : token.pattern\n\n      if (keys) keys.push(token)\n\n      if (token.optional) {\n        if (token.partial) {\n          route += prefix + '(' + capture + ')?'\n        } else {\n          route += '(?:' + prefix + '(' + capture + '))?'\n        }\n      } else {\n        route += prefix + '(' + capture + ')'\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + delimiter + ')?'\n\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')'\n  } else {\n    if (!strict) route += '(?:' + delimiter + '(?=' + endsWith + '))?'\n    if (!isEndDelimited) route += '(?=' + delimiter + '|' + endsWith + ')'\n  }\n\n  return new RegExp('^' + route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys)\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), keys, options)\n}\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport pathToRegexp from 'path-to-regexp'\n\nconst { hasOwnProperty } = Object.prototype\nconst cache = new Map()\n\nfunction decodeParam(val) {\n  try {\n    return decodeURIComponent(val)\n  } catch (err) {\n    return val\n  }\n}\n\nfunction matchPath(route, pathname, parentKeys, parentParams) {\n  const end = !route.children\n  const cacheKey = `${route.path || ''}|${end}`\n  let regexp = cache.get(cacheKey)\n\n  if (!regexp) {\n    const keys = []\n    regexp = {\n      keys,\n      pattern: pathToRegexp(route.path || '', keys, { end }),\n    }\n    cache.set(cacheKey, regexp)\n  }\n\n  const m = regexp.pattern.exec(pathname)\n  if (!m) {\n    return null\n  }\n\n  const path = m[0]\n  const params = Object.assign({}, parentParams)\n\n  for (let i = 1; i < m.length; i++) {\n    const key = regexp.keys[i - 1]\n    const prop = key.name\n    const value = m[i]\n    if (value !== undefined || !hasOwnProperty.call(params, prop)) {\n      if (key.repeat) {\n        params[prop] = value ? value.split(key.delimiter).map(decodeParam) : []\n      } else {\n        params[prop] = value ? decodeParam(value) : value\n      }\n    }\n  }\n\n  return {\n    path: !end && path.charAt(path.length - 1) === '/' ? path.substr(1) : path,\n    keys: parentKeys.concat(regexp.keys),\n    params,\n  }\n}\n\nexport default matchPath\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport matchPath from './matchPath'\n\nfunction matchRoute(route, baseUrl, pathname, parentKeys, parentParams) {\n  let match\n  let childMatches\n  let childIndex = 0\n\n  return {\n    next(routeToSkip) {\n      if (route === routeToSkip) {\n        return { done: true }\n      }\n\n      if (!match) {\n        match = matchPath(route, pathname, parentKeys, parentParams)\n\n        if (match) {\n          return {\n            done: false,\n            value: {\n              route,\n              baseUrl,\n              path: match.path,\n              keys: match.keys,\n              params: match.params,\n            },\n          }\n        }\n      }\n\n      if (match && route.children) {\n        while (childIndex < route.children.length) {\n          if (!childMatches) {\n            const childRoute = route.children[childIndex]\n            childRoute.parent = route\n\n            childMatches = matchRoute(\n              childRoute,\n              baseUrl + match.path,\n              pathname.substr(match.path.length),\n              match.keys,\n              match.params,\n            )\n          }\n\n          const childMatch = childMatches.next(routeToSkip)\n          if (!childMatch.done) {\n            return {\n              done: false,\n              value: childMatch.value,\n            }\n          }\n\n          childMatches = null\n          childIndex++\n        }\n      }\n\n      return { done: true }\n    },\n  }\n}\n\nexport default matchRoute\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nfunction resolveRoute(context, params) {\n  if (typeof context.route.action === 'function') {\n    return context.route.action(context, params)\n  }\n  return undefined\n}\n\nexport default resolveRoute\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport pathToRegexp from 'path-to-regexp'\nimport matchRoute from './matchRoute'\nimport resolveRoute from './resolveRoute'\n\nfunction isChildRoute(parentRoute, childRoute) {\n  let route = childRoute\n  while (route) {\n    route = route.parent\n    if (route === parentRoute) {\n      return true\n    }\n  }\n  return false\n}\n\nclass UniversalRouter {\n  constructor(routes, options = {}) {\n    if (Object(routes) !== routes) {\n      throw new TypeError('Invalid routes')\n    }\n\n    this.baseUrl = options.baseUrl || ''\n    this.errorHandler = options.errorHandler\n    this.resolveRoute = options.resolveRoute || resolveRoute\n    this.context = Object.assign({ router: this }, options.context)\n    this.root = Array.isArray(routes) ? { path: '', children: routes, parent: null } : routes\n    this.root.parent = null\n  }\n\n  resolve(pathnameOrContext) {\n    const context = Object.assign(\n      {},\n      this.context,\n      typeof pathnameOrContext === 'string' ? { pathname: pathnameOrContext } : pathnameOrContext,\n    )\n    const match = matchRoute(\n      this.root,\n      this.baseUrl,\n      context.pathname.substr(this.baseUrl.length),\n      [],\n      null,\n    )\n    const resolve = this.resolveRoute\n    let matches = null\n    let nextMatches = null\n    let currentContext = context\n\n    function next(resume, parent = matches.value.route, prevResult) {\n      const routeToSkip = prevResult === null && matches.value.route\n      matches = nextMatches || match.next(routeToSkip)\n      nextMatches = null\n\n      if (!resume) {\n        if (matches.done || !isChildRoute(parent, matches.value.route)) {\n          nextMatches = matches\n          return Promise.resolve(null)\n        }\n      }\n\n      if (matches.done) {\n        const error = new Error('Page not found')\n        error.context = context\n        error.code = 404\n        return Promise.reject(error)\n      }\n\n      currentContext = Object.assign({}, context, matches.value)\n\n      return Promise.resolve(resolve(currentContext, matches.value.params)).then((result) => {\n        if (result !== null && result !== undefined) {\n          return result\n        }\n        return next(resume, parent, result)\n      })\n    }\n\n    context.next = next\n\n    return Promise.resolve()\n      .then(() => next(true, this.root))\n      .catch((error) => {\n        error.context = error.context || currentContext\n        error.code = error.code || 500\n        if (this.errorHandler) {\n          return this.errorHandler(error)\n        }\n        throw error\n      })\n  }\n}\n\nUniversalRouter.pathToRegexp = pathToRegexp\n\nexport default UniversalRouter\n"],"names":["pathToRegexp","parse","compile","tokensToFunction","tokensToRegExp","DEFAULT_DELIMITER","DEFAULT_DELIMITERS","PATH_REGEXP","RegExp","join","str","options","tokens","key","index","path","defaultDelimiter","delimiter","delimiters","pathEscaped","res","exec","m","escaped","offset","slice","length","prev","next","name","capture","group","modifier","k","indexOf","push","partial","undefined","repeat","optional","pattern","prefix","escapeGroup","escapeString","substr","matches","Array","i","data","encode","encodeURIComponent","token","value","segment","isArray","TypeError","j","test","String","replace","flags","sensitive","regexpToRegexp","keys","groups","source","match","arrayToRegexp","parts","stringToRegexp","strict","end","endsWith","concat","map","route","isEndDelimited","hasOwnProperty","Object","prototype","cache","Map","decodeParam","val","decodeURIComponent","err","matchPath","pathname","parentKeys","parentParams","children","cacheKey","regexp","get","set","params","assign","prop","call","split","charAt","matchRoute","baseUrl","childMatches","childIndex","routeToSkip","done","childRoute","parent","childMatch","resolveRoute","context","action","isChildRoute","parentRoute","UniversalRouter","routes","errorHandler","router","root","resolve","pathnameOrContext","nextMatches","currentContext","resume","prevResult","Promise","error","Error","code","reject","then","result","catch"],"mappings":"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"}