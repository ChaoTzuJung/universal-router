{"version":3,"file":"universal-router-generate-urls.js","sources":["src/generateUrls.js"],"sourcesContent":["/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport UniversalRouter from './UniversalRouter'\n\nconst { pathToRegexp } = UniversalRouter\nconst cache = new Map()\n\nfunction cacheRoutes(routesByName, route, routes) {\n  if (routesByName.has(route.name)) {\n    throw new Error(`Route \"${route.name}\" already exists`)\n  }\n\n  if (route.name) {\n    routesByName.set(route.name, route)\n  }\n\n  if (routes) {\n    for (let i = 0; i < routes.length; i++) {\n      const childRoute = routes[i]\n      childRoute.parent = route\n      cacheRoutes(routesByName, childRoute, childRoute.children)\n    }\n  }\n}\n\nfunction generateUrls(router, options = {}) {\n  if (!(router instanceof UniversalRouter)) {\n    throw new TypeError('An instance of UniversalRouter is expected')\n  }\n\n  router.routesByName = router.routesByName || new Map()\n\n  return (routeName, params) => {\n    let route = router.routesByName.get(routeName)\n    if (!route) {\n      router.routesByName.clear() // clear cache\n      cacheRoutes(router.routesByName, router.root, router.root.children)\n\n      route = router.routesByName.get(routeName)\n      if (!route) {\n        throw new Error(`Route \"${routeName}\" not found`)\n      }\n    }\n\n    let regexp = cache.get(route.fullPath)\n    if (!regexp) {\n      let fullPath = ''\n      let rt = route\n      while (rt) {\n        const path = Array.isArray(rt.path) ? rt.path[0] : rt.path\n        if (path) {\n          fullPath = path + fullPath\n        }\n        rt = rt.parent\n      }\n      const tokens = pathToRegexp.parse(fullPath)\n      const toPath = pathToRegexp.tokensToFunction(tokens)\n      const keys = Object.create(null)\n      for (let i = 0; i < tokens.length; i++) {\n        if (typeof tokens[i] !== 'string') {\n          keys[tokens[i].name] = true\n        }\n      }\n      regexp = { toPath, keys }\n      cache.set(fullPath, regexp)\n      route.fullPath = fullPath\n    }\n\n    let url = router.baseUrl + regexp.toPath(params, options) || '/'\n\n    if (options.stringifyQueryParams && params) {\n      const queryParams = {}\n      const keys = Object.keys(params)\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i]\n        if (!regexp.keys[key]) {\n          queryParams[key] = params[key]\n        }\n      }\n      const query = options.stringifyQueryParams(queryParams)\n      if (query) {\n        url += query.charAt(0) === '?' ? query : `?${query}`\n      }\n    }\n\n    return url\n  }\n}\n\nexport default generateUrls\n"],"names":["pathToRegexp","UniversalRouter","cache","Map","cacheRoutes","routesByName","route","routes","has","name","Error","set","i","length","childRoute","parent","children","generateUrls","router","options","TypeError","routeName","params","get","clear","root","regexp","fullPath","rt","path","Array","isArray","tokens","parse","toPath","tokensToFunction","keys","Object","create","url","baseUrl","stringifyQueryParams","queryParams","key","query","charAt"],"mappings":"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"}